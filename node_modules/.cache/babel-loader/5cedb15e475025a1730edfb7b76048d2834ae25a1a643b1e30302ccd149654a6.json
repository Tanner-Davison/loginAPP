{"ast":null,"code":"var _jsxFileName = \"/Users/tannerdavison/Desktop/06-usereducer-starting-project/src/store/auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nconst AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n    if (storedUserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","_s","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tannerdavison/Desktop/06-usereducer-starting-project/src/store/auth-context.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogout: () => { },\n    onLogin: (email, password) =>{}\n});\nconst AuthContextProvider = (props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    \nuseEffect(() => {\n\tconst storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n\tif (storedUserLoggedInInformation === \"1\") {\n\t\tsetIsLoggedIn(true);\n\t}\n}, []);\n\n    const logoutHandler = () => {\n        localStorage.removeItem('isLoggedIn')\n\t\tsetIsLoggedIn(false);\n\t};\n    const loginHandler = () => {\n        localStorage.setItem('isLoggedIn','1')\n\t\tsetIsLoggedIn(true);\n\t};\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisLoggedIn: isLoggedIn,\n\t\t\t\tonLogout: logoutHandler,\n\t\t\t\tonLogin: loginHandler,\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</AuthContext.Provider>\n\t);\n};\nexport default AuthContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAa,CAAC;EACpCC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAEA,CAAA,KAAM,CAAE,CAAC;EACnBC,OAAO,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAI,CAAC;AAClC,CAAC,CAAC;AACF,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACnC,MAAM,CAACP,UAAU,EAAEQ,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACf,MAAMc,6BAA6B,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAExE,IAAIF,6BAA6B,KAAK,GAAG,EAAE;MAC1CD,aAAa,CAAC,IAAI,CAAC;IACpB;EACD,CAAC,EAAE,EAAE,CAAC;EAEF,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxBF,YAAY,CAACG,UAAU,CAAC,YAAY,CAAC;IAC3CL,aAAa,CAAC,KAAK,CAAC;EACrB,CAAC;EACE,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvBJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAC,GAAG,CAAC;IAC5CP,aAAa,CAAC,IAAI,CAAC;EACpB,CAAC;EACD,oBACCX,OAAA,CAACC,WAAW,CAACkB,QAAQ;IACpBC,KAAK,EAAE;MACNjB,UAAU,EAAEA,UAAU;MACtBC,QAAQ,EAAEW,aAAa;MACvBV,OAAO,EAAEY;IACV,CAAE;IAAAI,QAAA,EACDZ,KAAK,CAACY;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEzB,CAAC;AAACf,EAAA,CA7BIF,mBAAmB;AAAAkB,EAAA,GAAnBlB,mBAAmB;AA8BzB,eAAeP,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}